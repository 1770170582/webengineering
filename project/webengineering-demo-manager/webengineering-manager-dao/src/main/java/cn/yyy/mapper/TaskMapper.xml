<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yyy.mapper.TaskMapper" >
  <resultMap id="BaseResultMap" type="cn.yyy.pojo.Task" >
    <id column="taskid" property="taskid" jdbcType="INTEGER" />
    <result column="taskname" property="taskname" jdbcType="VARCHAR" />
    <result column="teacherid" property="teacherid" jdbcType="INTEGER" />
    <result column="courseid" property="courseid" jdbcType="INTEGER" />
    <result column="taskcontent" property="taskcontent" jdbcType="VARCHAR" />
    <result column="deadline" property="deadline" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    taskid, taskname, teacherid, courseid, taskcontent, deadline
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yyy.pojo.TaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from task
    where taskid = #{taskid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task
    where taskid = #{taskid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yyy.pojo.TaskExample" >
    delete from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yyy.pojo.Task" >
    insert into task (taskid, taskname, teacherid, 
      courseid, taskcontent, deadline
      )
    values (#{taskid,jdbcType=INTEGER}, #{taskname,jdbcType=VARCHAR}, #{teacherid,jdbcType=INTEGER}, 
      #{courseid,jdbcType=INTEGER}, #{taskcontent,jdbcType=VARCHAR}, #{deadline,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.yyy.pojo.Task" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        taskid,
      </if>
      <if test="taskname != null" >
        taskname,
      </if>
      <if test="teacherid != null" >
        teacherid,
      </if>
      <if test="courseid != null" >
        courseid,
      </if>
      <if test="taskcontent != null" >
        taskcontent,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskid != null" >
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="taskname != null" >
        #{taskname,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="taskcontent != null" >
        #{taskcontent,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yyy.pojo.TaskExample" resultType="java.lang.Integer" >
    select count(*) from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update task
    <set >
      <if test="record.taskid != null" >
        taskid = #{record.taskid,jdbcType=INTEGER},
      </if>
      <if test="record.taskname != null" >
        taskname = #{record.taskname,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherid != null" >
        teacherid = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null" >
        courseid = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.taskcontent != null" >
        taskcontent = #{record.taskcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.deadline != null" >
        deadline = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task
    set taskid = #{record.taskid,jdbcType=INTEGER},
      taskname = #{record.taskname,jdbcType=VARCHAR},
      teacherid = #{record.teacherid,jdbcType=INTEGER},
      courseid = #{record.courseid,jdbcType=INTEGER},
      taskcontent = #{record.taskcontent,jdbcType=VARCHAR},
      deadline = #{record.deadline,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yyy.pojo.Task" >
    update task
    <set >
      <if test="taskname != null" >
        taskname = #{taskname,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null" >
        teacherid = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="taskcontent != null" >
        taskcontent = #{taskcontent,jdbcType=VARCHAR},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
    </set>
    where taskid = #{taskid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yyy.pojo.Task" >
    update task
    set taskname = #{taskname,jdbcType=VARCHAR},
      teacherid = #{teacherid,jdbcType=INTEGER},
      courseid = #{courseid,jdbcType=INTEGER},
      taskcontent = #{taskcontent,jdbcType=VARCHAR},
      deadline = #{deadline,jdbcType=TIMESTAMP}
    where taskid = #{taskid,jdbcType=INTEGER}
  </update>
</mapper>